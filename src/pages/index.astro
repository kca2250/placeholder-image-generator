---
import Layout from '../layouts/Layout.astro';
---

<Layout>
	<div class="container">
		<h1>空画像ジェネレーター</h1>
		<form id="placeholder-form">
			<div>
				<label for="width">width</label>
				<input type="number" id="width" name="width" placeholder="500" />
			</div>
	
			<div>
				<label for="height">height</label>
				<input type="number" id="height" name="height" placeholder="200" />
			</div>
	
			<div>
				<label for="text">text</label>
				<input type="text" id="text" name="text" placeholder="Hello, World!" />
			</div>

	
			<button type="submit" id="submit-btn">generate</button>
			<div id="placeholder-div" role="img" aria-label="Generated placeholder image">
				<span id="size-label"></span>
				<span id="text-label"></span>
			</div>
			<button type="button" id="download-btn" disabled>ダウンロード</button>
		</form>
	</div>
</Layout>

<script is:inline type="module">
	const form = document.getElementById('placeholder-form');
	const div = document.getElementById('placeholder-div');
	const sizeLabel = document.getElementById('size-label');
	const textLabel = document.getElementById('text-label');
	const downloadBtn = document.getElementById('download-btn');
	let currentWidth = 0, currentHeight = 0, currentText = '';
	downloadBtn.disabled = true;
	form.addEventListener('submit', (e) => {
		e.preventDefault();
		const width = parseInt(form.width.value, 10) || 500;
		const height = parseInt(form.height.value, 10) || 200;
		const text = decodeURIComponent(encodeURIComponent(form.text.value || 'placeholder image'));
		div.style.width = '100%';
		const fitWidth = div.clientWidth;
		const calculatedHeight = Math.floor(fitWidth * (height / width));
		div.style.height = `${calculatedHeight}px`;
		div.style.backgroundColor = '#e2e2e2';
		sizeLabel.textContent = `${width} x ${height}`;
		textLabel.textContent = text;
		div.setAttribute('aria-label', `${width}x${height} ${text}`);
		currentWidth = width;
		currentHeight = height;
		currentText = text;
		downloadBtn.disabled = false;
	});
	downloadBtn.addEventListener('click', () => {
		const canvas = document.createElement('canvas');
		canvas.width = currentWidth;
		canvas.height = currentHeight;
		const ctx = canvas.getContext('2d');
		ctx.fillStyle = '#e2e2e2';
		ctx.fillRect(0, 0, canvas.width, canvas.height);
		ctx.fillStyle = '#555';
		ctx.textAlign = 'center';
		ctx.textBaseline = 'middle';
		ctx.font = `${Math.floor(currentHeight * 0.1)}px sans-serif`;
		ctx.fillText(`${currentWidth} x ${currentHeight}`, canvas.width / 2, canvas.height / 2 - 10);
		ctx.font = `${Math.floor(currentHeight * 0.08)}px sans-serif`;
		ctx.fillText(currentText, canvas.width / 2, canvas.height / 2 + 10);
		canvas.toBlob((blob) => {
			const link = document.createElement('a');
			link.href = URL.createObjectURL(blob);
			link.download = `${currentWidth}x${currentHeight}-${currentText}.png`;
			link.click();
			URL.revokeObjectURL(link.href);
		});
	});
</script>

<style is:inline lang="scss">
	.container {
		display: flex;
		flex-direction: column;
		gap: 16px;
		width: 100%;
		max-width: 400px;
		margin: 0 auto;
		padding: 12px;
		margin-top: 30px;
		h1 {
			font-size: 20px;
			font-weight: bold;
			text-align: center;
		}


		form {
			display: flex;
			flex-direction: column;
			gap: 16px;
			width: 100%;
			padding: 40px;
			border-radius: 12px;
			background-color: #ffffff;
			box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);

			label {
				display: block;
				margin-bottom: 6px;
				font-weight: bold;
			}

			input {
				width: 100%;
				border: 1px solid #e4e4e4;
				padding: 6px 12px;
				border-radius: 4px;
				&:focus {
					outline: none;
					border-color: #3c9592;
					box-shadow: 0 0 0 2px rgba(60, 149, 146, 0.2);
					transition: all 0.2s ease-in-out;
				}
				&.color-input {
					padding: 0;
					width: 30px;
					height: 30px;
				}
				&::placeholder {
					color: #ccc;
				}
			}


			button#submit-btn {
				width: 100%;
				font-size: 16px;
				font-weight: bold;
				padding: 12px;
				border-radius: 8px;
				background-color: #3c9592;
				border: none;
				color: #ffffff;
				margin-top: 20px;
				&:hover {
					background-color: #2c7572;
					transition: all 0.2s ease-in-out;
				}
			}

			button#download-btn {
				width: 100%;
				font-size: 16px;
				font-weight: bold;
				color: #3c9592;
				background-color: transparent;
				border: none;
				&:hover {
					color: #48b8b4;
					transition: all 0.2s ease-in-out;
				}
				&:disabled {
					color: #ccc;
					cursor: not-allowed;
				}
			}

			#placeholder-div {
				margin-top: 16px;
				display: flex;
				flex-direction: column;
				justify-content: center;
				align-items: center;
				background-position: center;
				background-size: cover;
				overflow: hidden;
				span {
					color: #555;
					&:first-child {
						font-size: 1rem;
						font-weight: bold;
					}
					&:last-child {
						font-size: 0.875rem;
						margin-top: 4px;
					}
				}
			}
		}
	}
	
</style>